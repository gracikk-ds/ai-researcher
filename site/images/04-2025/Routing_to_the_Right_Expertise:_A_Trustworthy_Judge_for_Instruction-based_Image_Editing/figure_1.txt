Figure 1: Conceptual architecture of the JURE framework. JURE takes the original image, editing instruction “Add a black cat behind the boy”, edited images generated by different IIE models (IP2P, HQ Edit, EMU Edit) as the initial input. In this example, JURE iteratively reasons about to verify (i) object presence (whether a cat was added), (ii) attribute accuracy (if added, whether it is black), (iii) spatial correctness (whether it appears behind the boy), and (iv) visual integrity (ensuring no unwanted edits or artifacts appear elsewhere). During each iteration (highlighted by different colors), the Orchestrator routes to the right expert, incrementally stores their output to the Context Dictionary for future reference, and dynamically decides its action for the next iteration. For instance, after detecting that IP2P failed to retain the boy in the first iteration, subsequent spatial analysis involving the boy and the cat is performed only for the HQ and EMU edits. Finally, it aggregates all expert responses to produce a final judgment.