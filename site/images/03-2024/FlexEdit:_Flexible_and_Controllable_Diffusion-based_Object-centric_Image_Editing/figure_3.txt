Fig. 3: Overview of FlexEdit framework. Given an input image I , we first bring it to the intermediate source latents through an inversion process. Subsequently, the denoising process starts from z ∗ T cloned from z T after the inversion process and progresses toward z ∗ 0 , which is then decoded to get the edited image I ∗ . At each denoising step, our FlexEdit block manipulates the noisy latent code through two main submodules: latent optimization (shown in blue ), and latent blending (shown in orange ). This is to achieve editing semantics as well as to maintain high fidelity to the source image. If the iterative process (shown in green ) is not executed, our FlexEdit would return z ∗ t .